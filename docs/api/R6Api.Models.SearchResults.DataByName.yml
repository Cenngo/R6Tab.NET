### YamlMime:ManagedReference
items:
- uid: R6Api.Models.SearchResults.DataByName
  commentId: T:R6Api.Models.SearchResults.DataByName
  id: DataByName
  parent: R6Api.Models.SearchResults
  children:
  - R6Api.Models.SearchResults.DataByName.FoundMatch
  - R6Api.Models.SearchResults.DataByName.FoundPlayers
  - R6Api.Models.SearchResults.DataByName.RequestedName
  langs:
  - csharp
  - vb
  name: DataByName
  nameWithType: DataByName
  fullName: R6Api.Models.SearchResults.DataByName
  type: Class
  source:
    id: DataByName
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SearchResults\DataByName.cs
    startLine: 11
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models.SearchResults
  summary: "\nApi Data, Parsed from Name Search for Rainbow6\n"
  example: []
  syntax:
    content: 'public class DataByName : SearchResult, ISearchResult'
    content.vb: >-
      Public Class DataByName
          Inherits SearchResult
          Implements ISearchResult
  inheritance:
  - System.Object
  - R6Api.Models.SearchResults.SearchResult
  implements:
  - R6Api.Interfaces.ISearchResult
  inheritedMembers:
  - R6Api.Models.SearchResults.SearchResult.Authorized
  - R6Api.Models.SearchResults.SearchResult.Api
  - R6Api.Models.SearchResults.SearchResult.Status
  - R6Api.Models.SearchResults.SearchResult.ErrorMessage
  - R6Api.Models.SearchResults.SearchResult.Message
  - R6Api.Models.SearchResults.SearchResult.Contact
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: R6Api.Models.SearchResults.DataByName.FoundMatch
  commentId: P:R6Api.Models.SearchResults.DataByName.FoundMatch
  id: FoundMatch
  parent: R6Api.Models.SearchResults.DataByName
  langs:
  - csharp
  - vb
  name: FoundMatch
  nameWithType: DataByName.FoundMatch
  fullName: R6Api.Models.SearchResults.DataByName.FoundMatch
  type: Property
  source:
    id: FoundMatch
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SearchResults\DataByName.cs
    startLine: 13
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models.SearchResults
  syntax:
    content: >-
      [JsonProperty("foundmatch")]

      public bool FoundMatch { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("foundmatch")>

      Public ReadOnly Property FoundMatch As Boolean
  overload: R6Api.Models.SearchResults.DataByName.FoundMatch*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: foundmatch
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SearchResults.DataByName.RequestedName
  commentId: P:R6Api.Models.SearchResults.DataByName.RequestedName
  id: RequestedName
  parent: R6Api.Models.SearchResults.DataByName
  langs:
  - csharp
  - vb
  name: RequestedName
  nameWithType: DataByName.RequestedName
  fullName: R6Api.Models.SearchResults.DataByName.RequestedName
  type: Property
  source:
    id: RequestedName
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SearchResults\DataByName.cs
    startLine: 15
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models.SearchResults
  syntax:
    content: >-
      [JsonProperty("requested")]

      public string RequestedName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("requested")>

      Public ReadOnly Property RequestedName As String
  overload: R6Api.Models.SearchResults.DataByName.RequestedName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: requested
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SearchResults.DataByName.FoundPlayers
  commentId: P:R6Api.Models.SearchResults.DataByName.FoundPlayers
  id: FoundPlayers
  parent: R6Api.Models.SearchResults.DataByName
  langs:
  - csharp
  - vb
  name: FoundPlayers
  nameWithType: DataByName.FoundPlayers
  fullName: R6Api.Models.SearchResults.DataByName.FoundPlayers
  type: Property
  source:
    id: FoundPlayers
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SearchResults\DataByName.cs
    startLine: 20
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models.SearchResults
  summary: "\nFound Matches for the Searched Name\n"
  example: []
  syntax:
    content: public IDictionary<string, Player> FoundPlayers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,R6Api.Models.Player}
    content.vb: Public ReadOnly Property FoundPlayers As IDictionary(Of String, Player)
  overload: R6Api.Models.SearchResults.DataByName.FoundPlayers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: R6Api.Models.SearchResults
  commentId: N:R6Api.Models.SearchResults
  name: R6Api.Models.SearchResults
  nameWithType: R6Api.Models.SearchResults
  fullName: R6Api.Models.SearchResults
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: R6Api.Models.SearchResults.SearchResult
  commentId: T:R6Api.Models.SearchResults.SearchResult
  parent: R6Api.Models.SearchResults
  name: SearchResult
  nameWithType: SearchResult
  fullName: R6Api.Models.SearchResults.SearchResult
- uid: R6Api.Interfaces.ISearchResult
  commentId: T:R6Api.Interfaces.ISearchResult
  parent: R6Api.Interfaces
  name: ISearchResult
  nameWithType: ISearchResult
  fullName: R6Api.Interfaces.ISearchResult
- uid: R6Api.Models.SearchResults.SearchResult.Authorized
  commentId: P:R6Api.Models.SearchResults.SearchResult.Authorized
  parent: R6Api.Models.SearchResults.SearchResult
  name: Authorized
  nameWithType: SearchResult.Authorized
  fullName: R6Api.Models.SearchResults.SearchResult.Authorized
- uid: R6Api.Models.SearchResults.SearchResult.Api
  commentId: P:R6Api.Models.SearchResults.SearchResult.Api
  parent: R6Api.Models.SearchResults.SearchResult
  name: Api
  nameWithType: SearchResult.Api
  fullName: R6Api.Models.SearchResults.SearchResult.Api
- uid: R6Api.Models.SearchResults.SearchResult.Status
  commentId: P:R6Api.Models.SearchResults.SearchResult.Status
  parent: R6Api.Models.SearchResults.SearchResult
  name: Status
  nameWithType: SearchResult.Status
  fullName: R6Api.Models.SearchResults.SearchResult.Status
- uid: R6Api.Models.SearchResults.SearchResult.ErrorMessage
  commentId: P:R6Api.Models.SearchResults.SearchResult.ErrorMessage
  parent: R6Api.Models.SearchResults.SearchResult
  name: ErrorMessage
  nameWithType: SearchResult.ErrorMessage
  fullName: R6Api.Models.SearchResults.SearchResult.ErrorMessage
- uid: R6Api.Models.SearchResults.SearchResult.Message
  commentId: P:R6Api.Models.SearchResults.SearchResult.Message
  parent: R6Api.Models.SearchResults.SearchResult
  name: Message
  nameWithType: SearchResult.Message
  fullName: R6Api.Models.SearchResults.SearchResult.Message
- uid: R6Api.Models.SearchResults.SearchResult.Contact
  commentId: P:R6Api.Models.SearchResults.SearchResult.Contact
  parent: R6Api.Models.SearchResults.SearchResult
  name: Contact
  nameWithType: SearchResult.Contact
  fullName: R6Api.Models.SearchResults.SearchResult.Contact
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: R6Api.Interfaces
  commentId: N:R6Api.Interfaces
  name: R6Api.Interfaces
  nameWithType: R6Api.Interfaces
  fullName: R6Api.Interfaces
- uid: R6Api.Models.SearchResults.DataByName.FoundMatch*
  commentId: Overload:R6Api.Models.SearchResults.DataByName.FoundMatch
  name: FoundMatch
  nameWithType: DataByName.FoundMatch
  fullName: R6Api.Models.SearchResults.DataByName.FoundMatch
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: R6Api.Models.SearchResults.DataByName.RequestedName*
  commentId: Overload:R6Api.Models.SearchResults.DataByName.RequestedName
  name: RequestedName
  nameWithType: DataByName.RequestedName
  fullName: R6Api.Models.SearchResults.DataByName.RequestedName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: R6Api.Models.SearchResults.DataByName.FoundPlayers*
  commentId: Overload:R6Api.Models.SearchResults.DataByName.FoundPlayers
  name: FoundPlayers
  nameWithType: DataByName.FoundPlayers
  fullName: R6Api.Models.SearchResults.DataByName.FoundPlayers
- uid: System.Collections.Generic.IDictionary{System.String,R6Api.Models.Player}
  commentId: T:System.Collections.Generic.IDictionary{System.String,R6Api.Models.Player}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Player>
  nameWithType: IDictionary<String, Player>
  fullName: System.Collections.Generic.IDictionary<System.String, R6Api.Models.Player>
  nameWithType.vb: IDictionary(Of String, Player)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, R6Api.Models.Player)
  name.vb: IDictionary(Of String, Player)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: R6Api.Models.Player
    name: Player
    nameWithType: Player
    fullName: R6Api.Models.Player
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: R6Api.Models.Player
    name: Player
    nameWithType: Player
    fullName: R6Api.Models.Player
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
