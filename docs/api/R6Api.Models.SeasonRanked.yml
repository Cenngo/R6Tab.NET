### YamlMime:ManagedReference
items:
- uid: R6Api.Models.SeasonRanked
  commentId: T:R6Api.Models.SeasonRanked
  id: SeasonRanked
  parent: R6Api.Models
  children:
  - R6Api.Models.SeasonRanked.AsAbandons
  - R6Api.Models.SeasonRanked.AsChamp
  - R6Api.Models.SeasonRanked.AsDeaths
  - R6Api.Models.SeasonRanked.AsKills
  - R6Api.Models.SeasonRanked.AsLosses
  - R6Api.Models.SeasonRanked.AsMmr
  - R6Api.Models.SeasonRanked.AsWins
  - R6Api.Models.SeasonRanked.Champ
  - R6Api.Models.SeasonRanked.EuAbandons
  - R6Api.Models.SeasonRanked.EuChamp
  - R6Api.Models.SeasonRanked.EuDeaths
  - R6Api.Models.SeasonRanked.EuKills
  - R6Api.Models.SeasonRanked.EuLosses
  - R6Api.Models.SeasonRanked.EuMmr
  - R6Api.Models.SeasonRanked.EuWins
  - R6Api.Models.SeasonRanked.GetMaxRankImg
  - R6Api.Models.SeasonRanked.MaxMmr
  - R6Api.Models.SeasonRanked.MaxRank
  - R6Api.Models.SeasonRanked.MaxRankName
  - R6Api.Models.SeasonRanked.NaAbandons
  - R6Api.Models.SeasonRanked.NaChamp
  - R6Api.Models.SeasonRanked.NaDeaths
  - R6Api.Models.SeasonRanked.NaKills
  - R6Api.Models.SeasonRanked.NaLosses
  - R6Api.Models.SeasonRanked.NaMmr
  - R6Api.Models.SeasonRanked.NaWins
  - R6Api.Models.SeasonRanked.SeasonClass
  - R6Api.Models.SeasonRanked.SeasonName
  langs:
  - csharp
  - vb
  name: SeasonRanked
  nameWithType: SeasonRanked
  fullName: R6Api.Models.SeasonRanked
  type: Class
  source:
    id: SeasonRanked
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 8
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  syntax:
    content: public class SeasonRanked
    content.vb: Public Class SeasonRanked
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: R6Api.Models.SeasonRanked.NaMmr
  commentId: P:R6Api.Models.SeasonRanked.NaMmr
  id: NaMmr
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: NaMmr
  nameWithType: SeasonRanked.NaMmr
  fullName: R6Api.Models.SeasonRanked.NaMmr
  type: Property
  source:
    id: NaMmr
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 13
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nMmr in North America Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("NA_mmr")]

      public int NaMmr { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("NA_mmr")>

      Public ReadOnly Property NaMmr As Integer
  overload: R6Api.Models.SeasonRanked.NaMmr*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NA_mmr
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.NaChamp
  commentId: P:R6Api.Models.SeasonRanked.NaChamp
  id: NaChamp
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: NaChamp
  nameWithType: SeasonRanked.NaChamp
  fullName: R6Api.Models.SeasonRanked.NaChamp
  type: Property
  source:
    id: NaChamp
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 18
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nChamp Rank in North America Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("NA_champ")]

      public int? NaChamp { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("NA_champ")>

      Public ReadOnly Property NaChamp As Integer?
  overload: R6Api.Models.SeasonRanked.NaChamp*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NA_champ
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.NaWins
  commentId: P:R6Api.Models.SeasonRanked.NaWins
  id: NaWins
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: NaWins
  nameWithType: SeasonRanked.NaWins
  fullName: R6Api.Models.SeasonRanked.NaWins
  type: Property
  source:
    id: NaWins
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 23
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nWins in North America Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("NA_wins")]

      public int? NaWins { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("NA_wins")>

      Public ReadOnly Property NaWins As Integer?
  overload: R6Api.Models.SeasonRanked.NaWins*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NA_wins
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.NaLosses
  commentId: P:R6Api.Models.SeasonRanked.NaLosses
  id: NaLosses
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: NaLosses
  nameWithType: SeasonRanked.NaLosses
  fullName: R6Api.Models.SeasonRanked.NaLosses
  type: Property
  source:
    id: NaLosses
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 28
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nLosses in North America Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("NA_losses")]

      public int? NaLosses { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("NA_losses")>

      Public ReadOnly Property NaLosses As Integer?
  overload: R6Api.Models.SeasonRanked.NaLosses*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NA_losses
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.NaAbandons
  commentId: P:R6Api.Models.SeasonRanked.NaAbandons
  id: NaAbandons
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: NaAbandons
  nameWithType: SeasonRanked.NaAbandons
  fullName: R6Api.Models.SeasonRanked.NaAbandons
  type: Property
  source:
    id: NaAbandons
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 33
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nAbandons in North America Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("NA_abandons")]

      public int? NaAbandons { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("NA_abandons")>

      Public ReadOnly Property NaAbandons As Integer?
  overload: R6Api.Models.SeasonRanked.NaAbandons*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NA_abandons
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.NaKills
  commentId: P:R6Api.Models.SeasonRanked.NaKills
  id: NaKills
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: NaKills
  nameWithType: SeasonRanked.NaKills
  fullName: R6Api.Models.SeasonRanked.NaKills
  type: Property
  source:
    id: NaKills
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 38
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nKills in North America Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("NA_kills")]

      public int? NaKills { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("NA_kills")>

      Public ReadOnly Property NaKills As Integer?
  overload: R6Api.Models.SeasonRanked.NaKills*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NA_kills
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.NaDeaths
  commentId: P:R6Api.Models.SeasonRanked.NaDeaths
  id: NaDeaths
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: NaDeaths
  nameWithType: SeasonRanked.NaDeaths
  fullName: R6Api.Models.SeasonRanked.NaDeaths
  type: Property
  source:
    id: NaDeaths
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 43
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nDeaths in North America Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("NA_deaths")]

      public int? NaDeaths { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("NA_deaths")>

      Public ReadOnly Property NaDeaths As Integer?
  overload: R6Api.Models.SeasonRanked.NaDeaths*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: NA_deaths
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.EuMmr
  commentId: P:R6Api.Models.SeasonRanked.EuMmr
  id: EuMmr
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: EuMmr
  nameWithType: SeasonRanked.EuMmr
  fullName: R6Api.Models.SeasonRanked.EuMmr
  type: Property
  source:
    id: EuMmr
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 48
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nMmr in North America Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("EU_mmr")]

      public int EuMmr { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("EU_mmr")>

      Public ReadOnly Property EuMmr As Integer
  overload: R6Api.Models.SeasonRanked.EuMmr*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: EU_mmr
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.EuChamp
  commentId: P:R6Api.Models.SeasonRanked.EuChamp
  id: EuChamp
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: EuChamp
  nameWithType: SeasonRanked.EuChamp
  fullName: R6Api.Models.SeasonRanked.EuChamp
  type: Property
  source:
    id: EuChamp
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 53
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nChamp Rank in North America Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("EU_champ")]

      public int? EuChamp { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("EU_champ")>

      Public ReadOnly Property EuChamp As Integer?
  overload: R6Api.Models.SeasonRanked.EuChamp*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: EU_champ
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.EuWins
  commentId: P:R6Api.Models.SeasonRanked.EuWins
  id: EuWins
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: EuWins
  nameWithType: SeasonRanked.EuWins
  fullName: R6Api.Models.SeasonRanked.EuWins
  type: Property
  source:
    id: EuWins
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 58
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nWins in North America Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("EU_wins")]

      public int? EuWins { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("EU_wins")>

      Public ReadOnly Property EuWins As Integer?
  overload: R6Api.Models.SeasonRanked.EuWins*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: EU_wins
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.EuLosses
  commentId: P:R6Api.Models.SeasonRanked.EuLosses
  id: EuLosses
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: EuLosses
  nameWithType: SeasonRanked.EuLosses
  fullName: R6Api.Models.SeasonRanked.EuLosses
  type: Property
  source:
    id: EuLosses
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 63
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nLosses in North America Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("EU_losses")]

      public int? EuLosses { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("EU_losses")>

      Public ReadOnly Property EuLosses As Integer?
  overload: R6Api.Models.SeasonRanked.EuLosses*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: EU_losses
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.EuAbandons
  commentId: P:R6Api.Models.SeasonRanked.EuAbandons
  id: EuAbandons
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: EuAbandons
  nameWithType: SeasonRanked.EuAbandons
  fullName: R6Api.Models.SeasonRanked.EuAbandons
  type: Property
  source:
    id: EuAbandons
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 68
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nAbandons in North America Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("EU_abandons")]

      public int? EuAbandons { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("EU_abandons")>

      Public ReadOnly Property EuAbandons As Integer?
  overload: R6Api.Models.SeasonRanked.EuAbandons*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: EU_abandons
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.EuKills
  commentId: P:R6Api.Models.SeasonRanked.EuKills
  id: EuKills
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: EuKills
  nameWithType: SeasonRanked.EuKills
  fullName: R6Api.Models.SeasonRanked.EuKills
  type: Property
  source:
    id: EuKills
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 73
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nKills in North America Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("EU_kills")]

      public int? EuKills { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("EU_kills")>

      Public ReadOnly Property EuKills As Integer?
  overload: R6Api.Models.SeasonRanked.EuKills*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: EU_kills
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.EuDeaths
  commentId: P:R6Api.Models.SeasonRanked.EuDeaths
  id: EuDeaths
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: EuDeaths
  nameWithType: SeasonRanked.EuDeaths
  fullName: R6Api.Models.SeasonRanked.EuDeaths
  type: Property
  source:
    id: EuDeaths
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 78
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nDeaths in North America Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("EU_deaths")]

      public int? EuDeaths { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("EU_deaths")>

      Public ReadOnly Property EuDeaths As Integer?
  overload: R6Api.Models.SeasonRanked.EuDeaths*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: EU_deaths
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.AsMmr
  commentId: P:R6Api.Models.SeasonRanked.AsMmr
  id: AsMmr
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: AsMmr
  nameWithType: SeasonRanked.AsMmr
  fullName: R6Api.Models.SeasonRanked.AsMmr
  type: Property
  source:
    id: AsMmr
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 83
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nMmr in Asia Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("AS_mmr")]

      public int AsMmr { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("AS_mmr")>

      Public ReadOnly Property AsMmr As Integer
  overload: R6Api.Models.SeasonRanked.AsMmr*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: AS_mmr
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.AsChamp
  commentId: P:R6Api.Models.SeasonRanked.AsChamp
  id: AsChamp
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: AsChamp
  nameWithType: SeasonRanked.AsChamp
  fullName: R6Api.Models.SeasonRanked.AsChamp
  type: Property
  source:
    id: AsChamp
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 88
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nChamp Rank in Asia Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("AS_champ")]

      public int? AsChamp { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("AS_champ")>

      Public ReadOnly Property AsChamp As Integer?
  overload: R6Api.Models.SeasonRanked.AsChamp*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: AS_champ
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.AsWins
  commentId: P:R6Api.Models.SeasonRanked.AsWins
  id: AsWins
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: AsWins
  nameWithType: SeasonRanked.AsWins
  fullName: R6Api.Models.SeasonRanked.AsWins
  type: Property
  source:
    id: AsWins
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 93
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nWins in Asia Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("AS_wins")]

      public int? AsWins { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("AS_wins")>

      Public ReadOnly Property AsWins As Integer?
  overload: R6Api.Models.SeasonRanked.AsWins*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: AS_wins
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.AsLosses
  commentId: P:R6Api.Models.SeasonRanked.AsLosses
  id: AsLosses
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: AsLosses
  nameWithType: SeasonRanked.AsLosses
  fullName: R6Api.Models.SeasonRanked.AsLosses
  type: Property
  source:
    id: AsLosses
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 98
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nLosses in Asia Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("AS_losses")]

      public int? AsLosses { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("AS_losses")>

      Public ReadOnly Property AsLosses As Integer?
  overload: R6Api.Models.SeasonRanked.AsLosses*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: AS_losses
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.AsAbandons
  commentId: P:R6Api.Models.SeasonRanked.AsAbandons
  id: AsAbandons
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: AsAbandons
  nameWithType: SeasonRanked.AsAbandons
  fullName: R6Api.Models.SeasonRanked.AsAbandons
  type: Property
  source:
    id: AsAbandons
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 103
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nAbandons in Asia Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("AS_abandons")]

      public int? AsAbandons { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("AS_abandons")>

      Public ReadOnly Property AsAbandons As Integer?
  overload: R6Api.Models.SeasonRanked.AsAbandons*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: AS_abandons
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.AsKills
  commentId: P:R6Api.Models.SeasonRanked.AsKills
  id: AsKills
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: AsKills
  nameWithType: SeasonRanked.AsKills
  fullName: R6Api.Models.SeasonRanked.AsKills
  type: Property
  source:
    id: AsKills
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 108
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nKills in Asia Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("AS_kills")]

      public int? AsKills { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("AS_kills")>

      Public ReadOnly Property AsKills As Integer?
  overload: R6Api.Models.SeasonRanked.AsKills*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: AS_kills
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.AsDeaths
  commentId: P:R6Api.Models.SeasonRanked.AsDeaths
  id: AsDeaths
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: AsDeaths
  nameWithType: SeasonRanked.AsDeaths
  fullName: R6Api.Models.SeasonRanked.AsDeaths
  type: Property
  source:
    id: AsDeaths
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 113
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\ndeaths in Asia Region\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("AS_deaths")]

      public int? AsDeaths { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("AS_deaths")>

      Public ReadOnly Property AsDeaths As Integer?
  overload: R6Api.Models.SeasonRanked.AsDeaths*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: AS_deaths
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.SeasonName
  commentId: P:R6Api.Models.SeasonRanked.SeasonName
  id: SeasonName
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: SeasonName
  nameWithType: SeasonRanked.SeasonName
  fullName: R6Api.Models.SeasonRanked.SeasonName
  type: Property
  source:
    id: SeasonName
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 119
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nName of the Season\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("seasonname")]

      public string SeasonName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("seasonname")>

      Public ReadOnly Property SeasonName As String
  overload: R6Api.Models.SeasonRanked.SeasonName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: seasonname
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.SeasonClass
  commentId: P:R6Api.Models.SeasonRanked.SeasonClass
  id: SeasonClass
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: SeasonClass
  nameWithType: SeasonRanked.SeasonClass
  fullName: R6Api.Models.SeasonRanked.SeasonClass
  type: Property
  source:
    id: SeasonClass
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 121
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  syntax:
    content: >-
      [JsonProperty("seasonclass")]

      public string SeasonClass { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("seasonclass")>

      Public ReadOnly Property SeasonClass As String
  overload: R6Api.Models.SeasonRanked.SeasonClass*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: seasonclass
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.Champ
  commentId: P:R6Api.Models.SeasonRanked.Champ
  id: Champ
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: Champ
  nameWithType: SeasonRanked.Champ
  fullName: R6Api.Models.SeasonRanked.Champ
  type: Property
  source:
    id: Champ
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 126
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nChamp Rank Achieved in the Season\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("champ")]

      public string Champ { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("champ")>

      Public ReadOnly Property Champ As String
  overload: R6Api.Models.SeasonRanked.Champ*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: champ
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.MaxMmr
  commentId: P:R6Api.Models.SeasonRanked.MaxMmr
  id: MaxMmr
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: MaxMmr
  nameWithType: SeasonRanked.MaxMmr
  fullName: R6Api.Models.SeasonRanked.MaxMmr
  type: Property
  source:
    id: MaxMmr
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 131
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nMax Mmr Achieved in the Season\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("maxmmr")]

      public int? MaxMmr { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("maxmmr")>

      Public ReadOnly Property MaxMmr As Integer?
  overload: R6Api.Models.SeasonRanked.MaxMmr*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: maxmmr
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.MaxRank
  commentId: P:R6Api.Models.SeasonRanked.MaxRank
  id: MaxRank
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: MaxRank
  nameWithType: SeasonRanked.MaxRank
  fullName: R6Api.Models.SeasonRanked.MaxRank
  type: Property
  source:
    id: MaxRank
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 136
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nMax Rank Achieved in the Season\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("maxrank")]

      public int MaxRank { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("maxrank")>

      Public ReadOnly Property MaxRank As Integer
  overload: R6Api.Models.SeasonRanked.MaxRank*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: maxrank
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.MaxRankName
  commentId: P:R6Api.Models.SeasonRanked.MaxRankName
  id: MaxRankName
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: MaxRankName
  nameWithType: SeasonRanked.MaxRankName
  fullName: R6Api.Models.SeasonRanked.MaxRankName
  type: Property
  source:
    id: MaxRankName
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 141
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nName of the Max Rank Achieved in the Season\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("maxrankname")]

      public string MaxRankName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("maxrankname")>

      Public ReadOnly Property MaxRankName As String
  overload: R6Api.Models.SeasonRanked.MaxRankName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: maxrankname
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.SeasonRanked.GetMaxRankImg
  commentId: M:R6Api.Models.SeasonRanked.GetMaxRankImg
  id: GetMaxRankImg
  parent: R6Api.Models.SeasonRanked
  langs:
  - csharp
  - vb
  name: GetMaxRankImg()
  nameWithType: SeasonRanked.GetMaxRankImg()
  fullName: R6Api.Models.SeasonRanked.GetMaxRankImg()
  type: Method
  source:
    id: GetMaxRankImg
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\SeasonRanked.cs
    startLine: 147
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nGet Image Url of the Max Rank Banner\n"
  example: []
  syntax:
    content: public string GetMaxRankImg()
    return:
      type: System.String
      description: Url of the Banner
    content.vb: Public Function GetMaxRankImg As String
  overload: R6Api.Models.SeasonRanked.GetMaxRankImg*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: R6Api.Models
  commentId: N:R6Api.Models
  name: R6Api.Models
  nameWithType: R6Api.Models
  fullName: R6Api.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: R6Api.Models.SeasonRanked.NaMmr*
  commentId: Overload:R6Api.Models.SeasonRanked.NaMmr
  name: NaMmr
  nameWithType: SeasonRanked.NaMmr
  fullName: R6Api.Models.SeasonRanked.NaMmr
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: R6Api.Models.SeasonRanked.NaChamp*
  commentId: Overload:R6Api.Models.SeasonRanked.NaChamp
  name: NaChamp
  nameWithType: SeasonRanked.NaChamp
  fullName: R6Api.Models.SeasonRanked.NaChamp
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: R6Api.Models.SeasonRanked.NaWins*
  commentId: Overload:R6Api.Models.SeasonRanked.NaWins
  name: NaWins
  nameWithType: SeasonRanked.NaWins
  fullName: R6Api.Models.SeasonRanked.NaWins
- uid: R6Api.Models.SeasonRanked.NaLosses*
  commentId: Overload:R6Api.Models.SeasonRanked.NaLosses
  name: NaLosses
  nameWithType: SeasonRanked.NaLosses
  fullName: R6Api.Models.SeasonRanked.NaLosses
- uid: R6Api.Models.SeasonRanked.NaAbandons*
  commentId: Overload:R6Api.Models.SeasonRanked.NaAbandons
  name: NaAbandons
  nameWithType: SeasonRanked.NaAbandons
  fullName: R6Api.Models.SeasonRanked.NaAbandons
- uid: R6Api.Models.SeasonRanked.NaKills*
  commentId: Overload:R6Api.Models.SeasonRanked.NaKills
  name: NaKills
  nameWithType: SeasonRanked.NaKills
  fullName: R6Api.Models.SeasonRanked.NaKills
- uid: R6Api.Models.SeasonRanked.NaDeaths*
  commentId: Overload:R6Api.Models.SeasonRanked.NaDeaths
  name: NaDeaths
  nameWithType: SeasonRanked.NaDeaths
  fullName: R6Api.Models.SeasonRanked.NaDeaths
- uid: R6Api.Models.SeasonRanked.EuMmr*
  commentId: Overload:R6Api.Models.SeasonRanked.EuMmr
  name: EuMmr
  nameWithType: SeasonRanked.EuMmr
  fullName: R6Api.Models.SeasonRanked.EuMmr
- uid: R6Api.Models.SeasonRanked.EuChamp*
  commentId: Overload:R6Api.Models.SeasonRanked.EuChamp
  name: EuChamp
  nameWithType: SeasonRanked.EuChamp
  fullName: R6Api.Models.SeasonRanked.EuChamp
- uid: R6Api.Models.SeasonRanked.EuWins*
  commentId: Overload:R6Api.Models.SeasonRanked.EuWins
  name: EuWins
  nameWithType: SeasonRanked.EuWins
  fullName: R6Api.Models.SeasonRanked.EuWins
- uid: R6Api.Models.SeasonRanked.EuLosses*
  commentId: Overload:R6Api.Models.SeasonRanked.EuLosses
  name: EuLosses
  nameWithType: SeasonRanked.EuLosses
  fullName: R6Api.Models.SeasonRanked.EuLosses
- uid: R6Api.Models.SeasonRanked.EuAbandons*
  commentId: Overload:R6Api.Models.SeasonRanked.EuAbandons
  name: EuAbandons
  nameWithType: SeasonRanked.EuAbandons
  fullName: R6Api.Models.SeasonRanked.EuAbandons
- uid: R6Api.Models.SeasonRanked.EuKills*
  commentId: Overload:R6Api.Models.SeasonRanked.EuKills
  name: EuKills
  nameWithType: SeasonRanked.EuKills
  fullName: R6Api.Models.SeasonRanked.EuKills
- uid: R6Api.Models.SeasonRanked.EuDeaths*
  commentId: Overload:R6Api.Models.SeasonRanked.EuDeaths
  name: EuDeaths
  nameWithType: SeasonRanked.EuDeaths
  fullName: R6Api.Models.SeasonRanked.EuDeaths
- uid: R6Api.Models.SeasonRanked.AsMmr*
  commentId: Overload:R6Api.Models.SeasonRanked.AsMmr
  name: AsMmr
  nameWithType: SeasonRanked.AsMmr
  fullName: R6Api.Models.SeasonRanked.AsMmr
- uid: R6Api.Models.SeasonRanked.AsChamp*
  commentId: Overload:R6Api.Models.SeasonRanked.AsChamp
  name: AsChamp
  nameWithType: SeasonRanked.AsChamp
  fullName: R6Api.Models.SeasonRanked.AsChamp
- uid: R6Api.Models.SeasonRanked.AsWins*
  commentId: Overload:R6Api.Models.SeasonRanked.AsWins
  name: AsWins
  nameWithType: SeasonRanked.AsWins
  fullName: R6Api.Models.SeasonRanked.AsWins
- uid: R6Api.Models.SeasonRanked.AsLosses*
  commentId: Overload:R6Api.Models.SeasonRanked.AsLosses
  name: AsLosses
  nameWithType: SeasonRanked.AsLosses
  fullName: R6Api.Models.SeasonRanked.AsLosses
- uid: R6Api.Models.SeasonRanked.AsAbandons*
  commentId: Overload:R6Api.Models.SeasonRanked.AsAbandons
  name: AsAbandons
  nameWithType: SeasonRanked.AsAbandons
  fullName: R6Api.Models.SeasonRanked.AsAbandons
- uid: R6Api.Models.SeasonRanked.AsKills*
  commentId: Overload:R6Api.Models.SeasonRanked.AsKills
  name: AsKills
  nameWithType: SeasonRanked.AsKills
  fullName: R6Api.Models.SeasonRanked.AsKills
- uid: R6Api.Models.SeasonRanked.AsDeaths*
  commentId: Overload:R6Api.Models.SeasonRanked.AsDeaths
  name: AsDeaths
  nameWithType: SeasonRanked.AsDeaths
  fullName: R6Api.Models.SeasonRanked.AsDeaths
- uid: R6Api.Models.SeasonRanked.SeasonName*
  commentId: Overload:R6Api.Models.SeasonRanked.SeasonName
  name: SeasonName
  nameWithType: SeasonRanked.SeasonName
  fullName: R6Api.Models.SeasonRanked.SeasonName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: R6Api.Models.SeasonRanked.SeasonClass*
  commentId: Overload:R6Api.Models.SeasonRanked.SeasonClass
  name: SeasonClass
  nameWithType: SeasonRanked.SeasonClass
  fullName: R6Api.Models.SeasonRanked.SeasonClass
- uid: R6Api.Models.SeasonRanked.Champ*
  commentId: Overload:R6Api.Models.SeasonRanked.Champ
  name: Champ
  nameWithType: SeasonRanked.Champ
  fullName: R6Api.Models.SeasonRanked.Champ
- uid: R6Api.Models.SeasonRanked.MaxMmr*
  commentId: Overload:R6Api.Models.SeasonRanked.MaxMmr
  name: MaxMmr
  nameWithType: SeasonRanked.MaxMmr
  fullName: R6Api.Models.SeasonRanked.MaxMmr
- uid: R6Api.Models.SeasonRanked.MaxRank*
  commentId: Overload:R6Api.Models.SeasonRanked.MaxRank
  name: MaxRank
  nameWithType: SeasonRanked.MaxRank
  fullName: R6Api.Models.SeasonRanked.MaxRank
- uid: R6Api.Models.SeasonRanked.MaxRankName*
  commentId: Overload:R6Api.Models.SeasonRanked.MaxRankName
  name: MaxRankName
  nameWithType: SeasonRanked.MaxRankName
  fullName: R6Api.Models.SeasonRanked.MaxRankName
- uid: R6Api.Models.SeasonRanked.GetMaxRankImg*
  commentId: Overload:R6Api.Models.SeasonRanked.GetMaxRankImg
  name: GetMaxRankImg
  nameWithType: SeasonRanked.GetMaxRankImg
  fullName: R6Api.Models.SeasonRanked.GetMaxRankImg
