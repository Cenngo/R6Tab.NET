### YamlMime:ManagedReference
items:
- uid: R6Api.Models.OperatorData
  commentId: T:R6Api.Models.OperatorData
  id: OperatorData
  parent: R6Api.Models
  children:
  - R6Api.Models.OperatorData.Id
  - R6Api.Models.OperatorData.OverallStats
  - R6Api.Models.OperatorData.SeasonalStats
  - R6Api.Models.OperatorData.Type
  langs:
  - csharp
  - vb
  name: OperatorData
  nameWithType: OperatorData
  fullName: R6Api.Models.OperatorData
  type: Class
  source:
    id: OperatorData
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\OperatorData.cs
    startLine: 11
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  syntax:
    content: public class OperatorData
    content.vb: Public Class OperatorData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: R6Api.Models.OperatorData.Id
  commentId: P:R6Api.Models.OperatorData.Id
  id: Id
  parent: R6Api.Models.OperatorData
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: OperatorData.Id
  fullName: R6Api.Models.OperatorData.Id
  type: Property
  source:
    id: Id
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\OperatorData.cs
    startLine: 13
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  syntax:
    content: >-
      [JsonProperty("id")]

      public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("id")>

      Public ReadOnly Property Id As String
  overload: R6Api.Models.OperatorData.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.OperatorData.Type
  commentId: P:R6Api.Models.OperatorData.Type
  id: Type
  parent: R6Api.Models.OperatorData
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: OperatorData.Type
  fullName: R6Api.Models.OperatorData.Type
  type: Property
  source:
    id: Type
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\OperatorData.cs
    startLine: 15
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  syntax:
    content: >-
      [JsonProperty("type")]

      public string Type { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("type")>

      Public ReadOnly Property Type As String
  overload: R6Api.Models.OperatorData.Type*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: type
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.OperatorData.OverallStats
  commentId: P:R6Api.Models.OperatorData.OverallStats
  id: OverallStats
  parent: R6Api.Models.OperatorData
  langs:
  - csharp
  - vb
  name: OverallStats
  nameWithType: OperatorData.OverallStats
  fullName: R6Api.Models.OperatorData.OverallStats
  type: Property
  source:
    id: OverallStats
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\OperatorData.cs
    startLine: 18
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  syntax:
    content: >-
      [JsonProperty("overall")]

      public OperatorStats OverallStats { get; }
    parameters: []
    return:
      type: R6Api.Models.OperatorStats
    content.vb: >-
      <JsonProperty("overall")>

      Public ReadOnly Property OverallStats As OperatorStats
  overload: R6Api.Models.OperatorData.OverallStats*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: overall
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.OperatorData.SeasonalStats
  commentId: P:R6Api.Models.OperatorData.SeasonalStats
  id: SeasonalStats
  parent: R6Api.Models.OperatorData
  langs:
  - csharp
  - vb
  name: SeasonalStats
  nameWithType: OperatorData.SeasonalStats
  fullName: R6Api.Models.OperatorData.SeasonalStats
  type: Property
  source:
    id: SeasonalStats
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\OperatorData.cs
    startLine: 20
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  syntax:
    content: >-
      [JsonProperty("seasonal")]

      public OperatorStats SeasonalStats { get; }
    parameters: []
    return:
      type: R6Api.Models.OperatorStats
    content.vb: >-
      <JsonProperty("seasonal")>

      Public ReadOnly Property SeasonalStats As OperatorStats
  overload: R6Api.Models.OperatorData.SeasonalStats*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: seasonal
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: R6Api.Models
  commentId: N:R6Api.Models
  name: R6Api.Models
  nameWithType: R6Api.Models
  fullName: R6Api.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: R6Api.Models.OperatorData.Id*
  commentId: Overload:R6Api.Models.OperatorData.Id
  name: Id
  nameWithType: OperatorData.Id
  fullName: R6Api.Models.OperatorData.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: R6Api.Models.OperatorData.Type*
  commentId: Overload:R6Api.Models.OperatorData.Type
  name: Type
  nameWithType: OperatorData.Type
  fullName: R6Api.Models.OperatorData.Type
- uid: R6Api.Models.OperatorData.OverallStats*
  commentId: Overload:R6Api.Models.OperatorData.OverallStats
  name: OverallStats
  nameWithType: OperatorData.OverallStats
  fullName: R6Api.Models.OperatorData.OverallStats
- uid: R6Api.Models.OperatorStats
  commentId: T:R6Api.Models.OperatorStats
  parent: R6Api.Models
  name: OperatorStats
  nameWithType: OperatorStats
  fullName: R6Api.Models.OperatorStats
- uid: R6Api.Models.OperatorData.SeasonalStats*
  commentId: Overload:R6Api.Models.OperatorData.SeasonalStats
  name: SeasonalStats
  nameWithType: OperatorData.SeasonalStats
  fullName: R6Api.Models.OperatorData.SeasonalStats
