### YamlMime:ManagedReference
items:
- uid: R6Api.Models.Bases.PlayerBase
  commentId: T:R6Api.Models.Bases.PlayerBase
  id: PlayerBase
  parent: R6Api.Models.Bases
  children:
  - R6Api.Models.Bases.PlayerBase.GetAvatar
  - R6Api.Models.Bases.PlayerBase.Name
  - R6Api.Models.Bases.PlayerBase.Platform
  - R6Api.Models.Bases.PlayerBase.User
  langs:
  - csharp
  - vb
  name: PlayerBase
  nameWithType: PlayerBase
  fullName: R6Api.Models.Bases.PlayerBase
  type: Class
  source:
    id: PlayerBase
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\Bases\PlayerBase.cs
    startLine: 9
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models.Bases
  syntax:
    content: 'public class PlayerBase : IPlayer'
    content.vb: >-
      Public Class PlayerBase
          Implements IPlayer
  inheritance:
  - System.Object
  derivedClasses:
  - R6Api.Models.Profile
  implements:
  - R6Api.Interfaces.IPlayer
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: R6Api.Models.Bases.PlayerBase.User
  commentId: P:R6Api.Models.Bases.PlayerBase.User
  id: User
  parent: R6Api.Models.Bases.PlayerBase
  langs:
  - csharp
  - vb
  name: User
  nameWithType: PlayerBase.User
  fullName: R6Api.Models.Bases.PlayerBase.User
  type: Property
  source:
    id: User
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\Bases\PlayerBase.cs
    startLine: 14
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models.Bases
  summary: "\nUserId of the Player\n"
  example: []
  syntax:
    content: >-
      [JsonProperty("p_user")]

      public string User { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("p_user")>

      Public ReadOnly Property User As String
  overload: R6Api.Models.Bases.PlayerBase.User*
  implements:
  - R6Api.Interfaces.IPlayer.User
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: p_user
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.Bases.PlayerBase.Name
  commentId: P:R6Api.Models.Bases.PlayerBase.Name
  id: Name
  parent: R6Api.Models.Bases.PlayerBase
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: PlayerBase.Name
  fullName: R6Api.Models.Bases.PlayerBase.Name
  type: Property
  source:
    id: Name
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\Bases\PlayerBase.cs
    startLine: 16
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models.Bases
  syntax:
    content: >-
      [JsonProperty("p_name")]

      public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("p_name")>

      Public ReadOnly Property Name As String
  overload: R6Api.Models.Bases.PlayerBase.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: p_name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.Bases.PlayerBase.Platform
  commentId: P:R6Api.Models.Bases.PlayerBase.Platform
  id: Platform
  parent: R6Api.Models.Bases.PlayerBase
  langs:
  - csharp
  - vb
  name: Platform
  nameWithType: PlayerBase.Platform
  fullName: R6Api.Models.Bases.PlayerBase.Platform
  type: Property
  source:
    id: Platform
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\Bases\PlayerBase.cs
    startLine: 20
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models.Bases
  syntax:
    content: >-
      [JsonIgnore]

      public Platform Platform { get; }
    parameters: []
    return:
      type: R6Api.Enums.Platform
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property Platform As Platform
  overload: R6Api.Models.Bases.PlayerBase.Platform*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.Bases.PlayerBase.GetAvatar
  commentId: M:R6Api.Models.Bases.PlayerBase.GetAvatar
  id: GetAvatar
  parent: R6Api.Models.Bases.PlayerBase
  langs:
  - csharp
  - vb
  name: GetAvatar()
  nameWithType: PlayerBase.GetAvatar()
  fullName: R6Api.Models.Bases.PlayerBase.GetAvatar()
  type: Method
  source:
    id: GetAvatar
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\Bases\PlayerBase.cs
    startLine: 29
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models.Bases
  summary: "\nGet Profile Picture of Player\n"
  example: []
  syntax:
    content: public string GetAvatar()
    return:
      type: System.String
      description: Url of User Avatar
    content.vb: Public Function GetAvatar As String
  overload: R6Api.Models.Bases.PlayerBase.GetAvatar*
  implements:
  - R6Api.Interfaces.IPlayer.GetAvatar
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: R6Api.Models.Bases
  commentId: N:R6Api.Models.Bases
  name: R6Api.Models.Bases
  nameWithType: R6Api.Models.Bases
  fullName: R6Api.Models.Bases
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: R6Api.Interfaces.IPlayer
  commentId: T:R6Api.Interfaces.IPlayer
  parent: R6Api.Interfaces
  name: IPlayer
  nameWithType: IPlayer
  fullName: R6Api.Interfaces.IPlayer
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: R6Api.Interfaces
  commentId: N:R6Api.Interfaces
  name: R6Api.Interfaces
  nameWithType: R6Api.Interfaces
  fullName: R6Api.Interfaces
- uid: R6Api.Models.Bases.PlayerBase.User*
  commentId: Overload:R6Api.Models.Bases.PlayerBase.User
  name: User
  nameWithType: PlayerBase.User
  fullName: R6Api.Models.Bases.PlayerBase.User
- uid: R6Api.Interfaces.IPlayer.User
  commentId: P:R6Api.Interfaces.IPlayer.User
  parent: R6Api.Interfaces.IPlayer
  name: User
  nameWithType: IPlayer.User
  fullName: R6Api.Interfaces.IPlayer.User
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: R6Api.Models.Bases.PlayerBase.Name*
  commentId: Overload:R6Api.Models.Bases.PlayerBase.Name
  name: Name
  nameWithType: PlayerBase.Name
  fullName: R6Api.Models.Bases.PlayerBase.Name
- uid: R6Api.Models.Bases.PlayerBase.Platform*
  commentId: Overload:R6Api.Models.Bases.PlayerBase.Platform
  name: Platform
  nameWithType: PlayerBase.Platform
  fullName: R6Api.Models.Bases.PlayerBase.Platform
- uid: R6Api.Enums.Platform
  commentId: T:R6Api.Enums.Platform
  parent: R6Api.Enums
  name: Platform
  nameWithType: Platform
  fullName: R6Api.Enums.Platform
- uid: R6Api.Enums
  commentId: N:R6Api.Enums
  name: R6Api.Enums
  nameWithType: R6Api.Enums
  fullName: R6Api.Enums
- uid: R6Api.Models.Bases.PlayerBase.GetAvatar*
  commentId: Overload:R6Api.Models.Bases.PlayerBase.GetAvatar
  name: GetAvatar
  nameWithType: PlayerBase.GetAvatar
  fullName: R6Api.Models.Bases.PlayerBase.GetAvatar
- uid: R6Api.Interfaces.IPlayer.GetAvatar
  commentId: M:R6Api.Interfaces.IPlayer.GetAvatar
  parent: R6Api.Interfaces.IPlayer
  name: GetAvatar()
  nameWithType: IPlayer.GetAvatar()
  fullName: R6Api.Interfaces.IPlayer.GetAvatar()
  spec.csharp:
  - uid: R6Api.Interfaces.IPlayer.GetAvatar
    name: GetAvatar
    nameWithType: IPlayer.GetAvatar
    fullName: R6Api.Interfaces.IPlayer.GetAvatar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: R6Api.Interfaces.IPlayer.GetAvatar
    name: GetAvatar
    nameWithType: IPlayer.GetAvatar
    fullName: R6Api.Interfaces.IPlayer.GetAvatar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
