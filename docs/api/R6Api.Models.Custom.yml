### YamlMime:ManagedReference
items:
- uid: R6Api.Models.Custom
  commentId: T:R6Api.Models.Custom
  id: Custom
  parent: R6Api.Models
  children:
  - R6Api.Models.Custom.CustomUrl
  - R6Api.Models.Custom.IsBanned
  - R6Api.Models.Custom.IsVerified
  - R6Api.Models.Custom.VisitorCount
  langs:
  - csharp
  - vb
  name: Custom
  nameWithType: Custom
  fullName: R6Api.Models.Custom
  type: Class
  source:
    id: Custom
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\Custom.cs
    startLine: 10
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  summary: "\nCustom R6Tab Data\n"
  example: []
  syntax:
    content: public class Custom
    content.vb: Public Class Custom
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: R6Api.Models.Custom.CustomUrl
  commentId: P:R6Api.Models.Custom.CustomUrl
  id: CustomUrl
  parent: R6Api.Models.Custom
  langs:
  - csharp
  - vb
  name: CustomUrl
  nameWithType: Custom.CustomUrl
  fullName: R6Api.Models.Custom.CustomUrl
  type: Property
  source:
    id: CustomUrl
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\Custom.cs
    startLine: 12
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  syntax:
    content: >-
      [JsonProperty("customurl")]

      public string CustomUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("customurl")>

      Public ReadOnly Property CustomUrl As String
  overload: R6Api.Models.Custom.CustomUrl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: customurl
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.Custom.IsVerified
  commentId: P:R6Api.Models.Custom.IsVerified
  id: IsVerified
  parent: R6Api.Models.Custom
  langs:
  - csharp
  - vb
  name: IsVerified
  nameWithType: Custom.IsVerified
  fullName: R6Api.Models.Custom.IsVerified
  type: Property
  source:
    id: IsVerified
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\Custom.cs
    startLine: 14
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  syntax:
    content: >-
      [JsonProperty("verified")]

      public bool IsVerified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("verified")>

      Public ReadOnly Property IsVerified As Boolean
  overload: R6Api.Models.Custom.IsVerified*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: verified
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.Custom.VisitorCount
  commentId: P:R6Api.Models.Custom.VisitorCount
  id: VisitorCount
  parent: R6Api.Models.Custom
  langs:
  - csharp
  - vb
  name: VisitorCount
  nameWithType: Custom.VisitorCount
  fullName: R6Api.Models.Custom.VisitorCount
  type: Property
  source:
    id: VisitorCount
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\Custom.cs
    startLine: 16
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  syntax:
    content: >-
      [JsonProperty("visitors")]

      public int VisitorCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("visitors")>

      Public ReadOnly Property VisitorCount As Integer
  overload: R6Api.Models.Custom.VisitorCount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: visitors
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6Api.Models.Custom.IsBanned
  commentId: P:R6Api.Models.Custom.IsBanned
  id: IsBanned
  parent: R6Api.Models.Custom
  langs:
  - csharp
  - vb
  name: IsBanned
  nameWithType: Custom.IsBanned
  fullName: R6Api.Models.Custom.IsBanned
  type: Property
  source:
    id: IsBanned
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\Custom.cs
    startLine: 18
  assemblies:
  - R6Tab.NET
  namespace: R6Api.Models
  syntax:
    content: >-
      [JsonProperty("banned")]

      public bool IsBanned { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("banned")>

      Public ReadOnly Property IsBanned As Boolean
  overload: R6Api.Models.Custom.IsBanned*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: banned
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: R6Api.Models
  commentId: N:R6Api.Models
  name: R6Api.Models
  nameWithType: R6Api.Models
  fullName: R6Api.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: R6Api.Models.Custom.CustomUrl*
  commentId: Overload:R6Api.Models.Custom.CustomUrl
  name: CustomUrl
  nameWithType: Custom.CustomUrl
  fullName: R6Api.Models.Custom.CustomUrl
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: R6Api.Models.Custom.IsVerified*
  commentId: Overload:R6Api.Models.Custom.IsVerified
  name: IsVerified
  nameWithType: Custom.IsVerified
  fullName: R6Api.Models.Custom.IsVerified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: R6Api.Models.Custom.VisitorCount*
  commentId: Overload:R6Api.Models.Custom.VisitorCount
  name: VisitorCount
  nameWithType: Custom.VisitorCount
  fullName: R6Api.Models.Custom.VisitorCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: R6Api.Models.Custom.IsBanned*
  commentId: Overload:R6Api.Models.Custom.IsBanned
  name: IsBanned
  nameWithType: Custom.IsBanned
  fullName: R6Api.Models.Custom.IsBanned
