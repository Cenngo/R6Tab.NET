### YamlMime:ManagedReference
items:
- uid: R6TabApiWrapper.Models.LeaderboardPlayer
  commentId: T:R6TabApiWrapper.Models.LeaderboardPlayer
  id: LeaderboardPlayer
  parent: R6TabApiWrapper.Models
  children:
  - R6TabApiWrapper.Models.LeaderboardPlayer.Profile
  - R6TabApiWrapper.Models.LeaderboardPlayer.Ranked
  - R6TabApiWrapper.Models.LeaderboardPlayer.Stats
  langs:
  - csharp
  - vb
  name: LeaderboardPlayer
  nameWithType: LeaderboardPlayer
  fullName: R6TabApiWrapper.Models.LeaderboardPlayer
  type: Class
  source:
    id: LeaderboardPlayer
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\LeaderboardPlayer.cs
    startLine: 9
  assemblies:
  - R6Tab.NET
  namespace: R6TabApiWrapper.Models
  syntax:
    content: public class LeaderboardPlayer
    content.vb: Public Class LeaderboardPlayer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: R6TabApiWrapper.Models.LeaderboardPlayer.Ranked
  commentId: P:R6TabApiWrapper.Models.LeaderboardPlayer.Ranked
  id: Ranked
  parent: R6TabApiWrapper.Models.LeaderboardPlayer
  langs:
  - csharp
  - vb
  name: Ranked
  nameWithType: LeaderboardPlayer.Ranked
  fullName: R6TabApiWrapper.Models.LeaderboardPlayer.Ranked
  type: Property
  source:
    id: Ranked
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\LeaderboardPlayer.cs
    startLine: 11
  assemblies:
  - R6Tab.NET
  namespace: R6TabApiWrapper.Models
  syntax:
    content: >-
      [JsonProperty("ranked")]

      public RankedBase Ranked { get; }
    parameters: []
    return:
      type: R6Api.Models.RankedBase
    content.vb: >-
      <JsonProperty("ranked")>

      Public ReadOnly Property Ranked As RankedBase
  overload: R6TabApiWrapper.Models.LeaderboardPlayer.Ranked*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ranked
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6TabApiWrapper.Models.LeaderboardPlayer.Stats
  commentId: P:R6TabApiWrapper.Models.LeaderboardPlayer.Stats
  id: Stats
  parent: R6TabApiWrapper.Models.LeaderboardPlayer
  langs:
  - csharp
  - vb
  name: Stats
  nameWithType: LeaderboardPlayer.Stats
  fullName: R6TabApiWrapper.Models.LeaderboardPlayer.Stats
  type: Property
  source:
    id: Stats
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\LeaderboardPlayer.cs
    startLine: 13
  assemblies:
  - R6Tab.NET
  namespace: R6TabApiWrapper.Models
  syntax:
    content: >-
      [JsonProperty("stats")]

      public StatsBase Stats { get; }
    parameters: []
    return:
      type: R6Api.Models.Stats.StatsBase
    content.vb: >-
      <JsonProperty("stats")>

      Public ReadOnly Property Stats As StatsBase
  overload: R6TabApiWrapper.Models.LeaderboardPlayer.Stats*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: stats
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: R6TabApiWrapper.Models.LeaderboardPlayer.Profile
  commentId: P:R6TabApiWrapper.Models.LeaderboardPlayer.Profile
  id: Profile
  parent: R6TabApiWrapper.Models.LeaderboardPlayer
  langs:
  - csharp
  - vb
  name: Profile
  nameWithType: LeaderboardPlayer.Profile
  fullName: R6TabApiWrapper.Models.LeaderboardPlayer.Profile
  type: Property
  source:
    id: Profile
    path: C:\Users\Cenk\source\repos\R6Tab.NET\R6TabApiWrapper\Models\LeaderboardPlayer.cs
    startLine: 15
  assemblies:
  - R6Tab.NET
  namespace: R6TabApiWrapper.Models
  syntax:
    content: >-
      [JsonProperty("profile")]

      public Profile Profile { get; }
    parameters: []
    return:
      type: R6Api.Models.Profile
    content.vb: >-
      <JsonProperty("profile")>

      Public ReadOnly Property Profile As Profile
  overload: R6TabApiWrapper.Models.LeaderboardPlayer.Profile*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: profile
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: R6TabApiWrapper.Models
  commentId: N:R6TabApiWrapper.Models
  name: R6TabApiWrapper.Models
  nameWithType: R6TabApiWrapper.Models
  fullName: R6TabApiWrapper.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: R6TabApiWrapper.Models.LeaderboardPlayer.Ranked*
  commentId: Overload:R6TabApiWrapper.Models.LeaderboardPlayer.Ranked
  name: Ranked
  nameWithType: LeaderboardPlayer.Ranked
  fullName: R6TabApiWrapper.Models.LeaderboardPlayer.Ranked
- uid: R6Api.Models.RankedBase
  commentId: T:R6Api.Models.RankedBase
  parent: R6Api.Models
  name: RankedBase
  nameWithType: RankedBase
  fullName: R6Api.Models.RankedBase
- uid: R6Api.Models
  commentId: N:R6Api.Models
  name: R6Api.Models
  nameWithType: R6Api.Models
  fullName: R6Api.Models
- uid: R6TabApiWrapper.Models.LeaderboardPlayer.Stats*
  commentId: Overload:R6TabApiWrapper.Models.LeaderboardPlayer.Stats
  name: Stats
  nameWithType: LeaderboardPlayer.Stats
  fullName: R6TabApiWrapper.Models.LeaderboardPlayer.Stats
- uid: R6Api.Models.Stats.StatsBase
  commentId: T:R6Api.Models.Stats.StatsBase
  parent: R6Api.Models.Stats
  name: StatsBase
  nameWithType: StatsBase
  fullName: R6Api.Models.Stats.StatsBase
- uid: R6Api.Models.Stats
  commentId: N:R6Api.Models.Stats
  name: R6Api.Models.Stats
  nameWithType: R6Api.Models.Stats
  fullName: R6Api.Models.Stats
- uid: R6TabApiWrapper.Models.LeaderboardPlayer.Profile*
  commentId: Overload:R6TabApiWrapper.Models.LeaderboardPlayer.Profile
  name: Profile
  nameWithType: LeaderboardPlayer.Profile
  fullName: R6TabApiWrapper.Models.LeaderboardPlayer.Profile
- uid: R6Api.Models.Profile
  commentId: T:R6Api.Models.Profile
  parent: R6Api.Models
  name: Profile
  nameWithType: Profile
  fullName: R6Api.Models.Profile
